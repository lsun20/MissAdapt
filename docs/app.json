[{"name":"app.R","content":"# Load necessary libraries\nlibrary(shiny)\n\n# Define UI for application\nui <- fluidPage(\n  \n  # Application title\n  titlePanel(\"Adaptive Soft Threshold for Combining Unrestricted and Restricted Estimates\"),\n  # Description line below the title\n  h4(\"Shiny App based on the MissAdapt repository.\"),\n  h4(\"Adapts to bias due to potential misspecification of the restriction via soft-thresholding.\"),\n  h4(\"For more functionality refer to the vignette on GitHub.\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      fluidRow(\n        column(6, numericInput(\"YU\", \"Unrestricted estimate (YU):\", value = 0.0043)),\n        column(6, numericInput(\"sigmaU\", \"Standard error (sigmaU):\", value = 0.0014))\n      ),\n      fluidRow(\n        column(6, numericInput(\"YR\", \"Restricted estimate (YR):\", value = 0.0026)),\n        column(6, numericInput(\"sigmaR\", \"Standard error (sigmaR):\", value = 0.0009))\n      ),\n      numericInput(\"VUR\", \"Cov(YU,YR) (default assumes YR is efficient, and sets VUR to sigmaR^2):\", value = 0.0009^2, step = 0.1),\n      actionButton(\"compute\", \"Adapt\")\n    ),\n    \n    mainPanel(\n      textOutput(\"corr_output\"),\n      textOutput(\"st_output\"),\n      textOutput(\"estimate_output\")\n      \n    )\n  )\n)\n\n# Define server logic\nserver <- function(input, output,session) {\n  observe({\n    # Update VUR to default value based on sigmaR\n    updateNumericInput(session, \"VUR\", value = input$sigmaR^2)\n  })\n  observeEvent(input$compute, {\n    YU <- as.numeric(input$YU)\n    sigmaU <- as.numeric(input$sigmaU)\n    YR <- as.numeric(input$YR)\n    sigmaR <- as.numeric(input$sigmaR)\n    VUR <- as.numeric(input$VUR)\n    \n    VU <- sigmaU^2\n    VR <- sigmaR^2\n    VO <- VR - 2 * VUR + VU\n    VUO <- (VUR - VU)\n    corr <- VUO / sqrt(VO) / sqrt(VU)\n  # Precompute the function\n  st_thresholds_grid <- c(1.57482766198508, 1.55125499909256, 1.52742074353448, 1.50334882329505, 1.47906233490077, \n                          1.45458150029266, 1.4299270409132, 1.40512383967876, 1.38019303478176, 1.35515605260822, \n                          1.33003227704614, 1.30483757026634, 1.27959849366401, 1.25433502048039, 1.22906433002374, \n                          1.20379862855458, 1.17856184780166, 1.15337076343841, 1.12824236155291, 1.10319422804627, \n                          1.07824432631491, 1.05340561586754, 1.02870454439195, 1.00416561484403, 0.979813578603983, \n                          0.955673742841495, 0.931764912197942, 0.908115155200027, 0.884752852219577, 0.861705205296034, \n                          0.838984986407601, 0.816633434009214, 0.794675112145209, 0.7731297065466, 0.752040905293611, \n                          0.731416663001888, 0.711309030584423, 0.69172503640683, 0.672713172851095, 0.654291308290986, \n                          0.636491137084625, 0.619350676770425, 0.602881936878391, 0.58712468096191, 0.57210936993747, \n                          0.557856650375231, 0.544387216517243, 0.531735712033272, 0.519924940086376, 0.508976432315778, \n                          0.498906428201768, 0.489732214564344, 0.481477367692955, 0.474157387541963, 0.467784346318755, \n                          0.462372207805892, 0.457930286791032, 0.454466861185033, 0.451997110894451, 0.450509551844624)\n  \n  Sigma_UO_grid <- abs(tanh(seq(-3, -0.05, 0.05)))\n  \n  st.function <- splinefun(Sigma_UO_grid, st_thresholds_grid, method = \"fmm\", ties = mean)\n  st <- st.function(abs(corr))\n  \n  YO <- YR - YU\n  tO <- YO / sqrt(VO)\n  GMM <- YU - VUO / VO * YO; V_GMM <- VU - VUO/VO*VUO;\n  adaptive_st <- VUO / sqrt(VO) * ((tO > st) * (tO - st) + (tO < -st) * (tO + st)) + GMM\n  decimal <- match(TRUE, round(YU, 1:20) == YU)\n  adaptive_st <- round(adaptive_st,decimal)\n  tO <- round(tO,decimal)\n  GMM <- round(GMM,decimal)\n  output$corr_output <- renderText({\n    paste(\"The correlation coefficient between YU and (YR-YU) is \", round(corr,3),\n          \", which implies the efficient estimate is \",GMM,\n          \" and the efficiency of YU relative to the efficient estimate is \", round(1-corr^2,3),\".\")\n  })\n  output$st_output <- renderText({\n    paste(\"Given the relative efficiency, the soft threshold that achieves optimal adaptation is \", round(st,3),\".\")\n  })\n  \n  if (-st < tO & tO < st) {\n    output$estimate_output <- renderText({\n      paste(\"Since (YR-YU)/std(YR-YU) = \",tO,\n            \" does not exceed the threshold, adaptation maintains to be the efficient estimate \",\n            adaptive_st,\".\")\n      })\n  }\n  if (tO <=-st ) {\n    output$estimate_output <- renderText({\n      paste(\"Since (YR-YU)/std(YR-YU) = \",tO,\n            \" is negative and below threshold, adaptation translates YU toward the efficient estimate and obtains \",\n            adaptive_st,\".\")\n    })\n  }\n  if (tO >= st ) {\n    output$estimate_output <- renderText({\n      paste(\"Since (YR-YU)/std(YR-YU) = \",tO,\n            \" is positive and above threshold, adaptation translates YU toward the efficient estimate and obtains \",\n            adaptive_st,\".\")\n    })\n  }\n  })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"}]
